#include "tables.h"
#include "bootstrapping.h"




word8 Alogtable[256] = {
			1, 3, 5, 15, 17, 51, 85,255, 26, 46,114,150,161,248, 19, 53,
			95,225, 56, 72,216,115,149,164,247, 2, 6, 10, 30, 34,102,170,
			229, 52, 92,228, 55, 89,235, 38,106,190,217,112,144,171,230, 49,
			83,245, 4, 12, 20, 60, 68,204, 79,209,104,184,211,110,178,205,
			76,212,103,169,224, 59, 77,215, 98,166,241, 8, 24, 40,120,136,
			131,158,185,208,107,189,220,127,129,152,179,206, 73,219,118,154,
			181,196, 87,249, 16, 48, 80,240, 11, 29, 39,105,187,214, 97,163,
			254, 25, 43,125,135,146,173,236, 47,113,147,174,233, 32, 96,160,
			251, 22, 58, 78,210,109,183,194, 93,231, 50, 86,250, 21, 63, 65,
			195, 94,226, 61, 71,201, 64,192, 91,237, 44,116,156,191,218,117,
			159,186,213,100,172,239, 42,126,130,157,188,223,122,142,137,128,
			155,182,193, 88,232, 35,101,175,234, 37,111,177,200, 67,197, 84,
			252, 31, 33, 99,165,244, 7, 9, 27, 45,119,153,176,203, 70,202,
			69,207, 74,222,121,139,134,145,168,227, 62, 66,198, 81,243, 14,
			18, 54, 90,238, 41,123,141,140,143,138,133,148,167,242, 13, 23,
			57, 75,221,124,132,151,162,253, 28, 36,108,180,199, 82,246, 0};



/* S is the LUT for the S-box, corresponding to S_RD in the book
 */
word8 S[256] = {
		99,124,119,123,242,107,111,197, 48, 1,103, 43,254,215,171,118,
		202,130,201,125,250, 89, 71,240,173,212,162,175,156,164,114,192,
		183,253,147, 38, 54, 63,247,204, 52,165,229,241,113,216, 49, 21,
		4,199, 35,195, 24,150, 5,154, 7, 18,128,226,235, 39,178,117,
		9,131, 44, 26, 27,110, 90,160, 82, 59,214,179, 41,227, 47,132,
		83,209, 0,237, 32,252,177, 91,106,203,190, 57, 74, 76, 88,207,
		208,239,170,251, 67, 77, 51,133, 69,249, 2,127, 80, 60,159,168,
		81,163, 64,143,146,157, 56,245,188,182,218, 33, 16,255,243,210,
		205, 12, 19,236, 95,151, 68, 23,196,167,126, 61,100, 93, 25,115,
		96,129, 79,220, 34, 42,144,136, 70,238,184, 20,222, 94, 11,219,
		224, 50, 58, 10, 73, 6, 36, 92,194,211,172, 98,145,149,228,121,
		231,200, 55,109,141,213, 78,169,108, 86,244,234,101,122,174, 8,
		186,120, 37, 46, 28,166,180,198,232,221,116, 31, 75,189,139,138,
		112, 62,181,102, 72, 3,246, 14, 97, 53, 87,185,134,193, 29,158,
		225,248,152, 17,105,217,142,148,155, 30,135,233,206, 85, 40,223,
		140,161,137, 13,191,230, 66,104, 65,153, 45, 15,176, 84,187, 22};



/* Si is the LUT for the inverse of the  S-box, 
 * corresponding to S_RD^(-1) in the book
 */
word8 Si[256] = {
		 82, 9,106,213, 48, 54,165, 56,191, 64,163,158,129,243,215,251,
		 124,227, 57,130,155, 47,255,135, 52,142, 67, 68,196,222,233,203,
		 84,123,148, 50,166,194, 35, 61,238, 76,149, 11, 66,250,195, 78,
		 8, 46,161,102, 40,217, 36,178,118, 91,162, 73,109,139,209, 37,
		 114,248,246,100,134,104,152, 22,212,164, 92,204, 93,101,182,146,
		 108,112, 72, 80,253,237,185,218, 94, 21, 70, 87,167,141,157,132,
		 144,216,171, 0,140,188,211, 10,247,228, 88, 5,184,179, 69, 6,
		 208, 44, 30,143,202, 63, 15, 2,193,175,189, 3, 1, 19,138,107,
		 58,145, 17, 65, 79,103,220,234,151,242,207,206,240,180,230,115,
		 150,172,116, 34,231,173, 53,133,226,249, 55,232, 28,117,223,110,
		 71,241, 26,113, 29, 41,197,137,111,183, 98, 14,170, 24,190, 27,
		 252, 86, 62, 75,198,210,121, 32,154,219,192,254,120,205, 90,244,
		 31,221,168, 51,136, 7,199, 49,177, 18, 16, 89, 39,128,236, 95,
		 96, 81,127,169, 25,181, 74, 13, 45,229,122,159,147,201,156,239,
		 160,224, 59, 77,174, 42,245,176,200,235,187, 60,131, 83,153, 97,
		 23, 43, 4,126,186,119,214, 38,225,105, 20, 99, 85, 33, 12,125};



/* RC is the table of the Round Constants.
 * It is used during the key expension routine.
 */
word32 RC[30] = {
		 0x00,0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80,
		 0x1B,0x36,0x6C,0xD8,0xAB,0x4D,0x9A,0x2F,0x5E,
		 0xBC,0x63,0xC6,0x97,0x35,0x6A,0xD4,0xB3,0x7D,
		 0xFA,0xEF,0xC5};


word8 S_0_b16[256] = {3, 12, 7, 11, 2, 11, 15, 5, 0, 1, 7, 11, 14, 7, 11, 6, 10, 2, 9, 13, 10, 9, 7, 0, 13, 4, 2, 15, 12, 4, 2, 0, 7, 13, 3, 6, 6, 15, 7, 12, 4, 5, 5, 1, 1, 8, 1, 5, 4, 7, 3, 3, 8, 6, 5, 10, 7, 2, 0, 2, 11, 7, 2, 5, 9, 3, 12, 10, 11, 14, 10, 0, 2, 11, 6, 3, 9, 3, 15, 4, 3, 1, 0, 13, 0, 12, 1, 11, 10, 11, 14, 9, 10, 12, 8, 15, 0, 15, 10, 11, 3, 13, 3, 5, 5, 9, 2, 15, 0, 12, 15, 8, 1, 3, 0, 15, 2, 13, 8, 5, 12, 6, 10, 1, 0, 15, 3, 2, 13, 12, 3, 12, 15, 7, 4, 7, 4, 7, 14, 13, 4, 13, 9, 3, 0, 1, 15, 12, 2, 10, 0, 8, 6, 14, 8, 4, 14, 14, 11, 11, 0, 2, 10, 10, 9, 6, 4, 12, 2, 3, 12, 2, 1, 5, 4, 9, 7, 8, 7, 13, 13, 5, 14, 9, 12, 6, 4, 10, 5, 10, 14, 8, 10, 8, 5, 14, 12, 6, 4, 6, 8, 13, 4, 15, 11, 13, 11, 10, 0, 14, 5, 6, 8, 3, 6, 14, 1, 5, 7, 9, 6, 1, 13, 14, 1, 8, 8, 1, 9, 9, 14, 4, 11, 14, 7, 9, 14, 5, 8, 15, 12, 1, 9, 13, 15, 6, 2, 8, 1, 9, 13, 15, 0, 4, 11, 6};

word8 S_1_b16[256] = {6, 7, 7, 7, 15, 6, 6, 12, 3, 0, 6, 2, 15, 13, 10, 7, 12, 8, 12, 7, 15, 5, 4, 15, 10, 13, 10, 10, 9, 10, 7, 12, 11, 15, 9, 2, 3, 3, 15, 12, 3, 10, 14, 15, 7, 13, 3, 1, 0, 12, 2, 12, 1, 9, 0, 9, 0, 1, 8, 14, 14, 2, 11, 7, 0, 8, 2, 1, 1, 6, 5, 10, 5, 3, 13, 11, 2, 14, 2, 8, 5, 13, 0, 14, 2, 15, 11, 5, 6, 12, 11, 3, 4, 4, 5, 12, 13, 14, 10, 15, 4, 4, 3, 8, 4, 15, 0, 7, 5, 3, 9, 10, 5, 10, 4, 8, 9, 9, 3, 15, 11, 11, 13, 2, 1, 15, 15, 13, 12, 0, 1, 14, 5, 9, 4, 1, 12, 10, 7, 3, 6, 5, 1, 7, 6, 8, 4, 13, 2, 2, 9, 8, 4, 14, 11, 1, 13, 5, 0, 13, 14, 3, 3, 0, 4, 0, 2, 5, 12, 13, 10, 6, 9, 9, 14, 7, 14, 12, 3, 6, 8, 13, 4, 10, 6, 5, 15, 14, 6, 7, 10, 0, 11, 7, 2, 2, 1, 10, 11, 12, 14, 13, 7, 1, 4, 11, 8, 8, 7, 3, 11, 6, 4, 0, 15, 0, 6, 3, 5, 11, 8, 12, 1, 9, 14, 15, 9, 1, 6, 13, 8, 9, 9, 1, 8, 14, 12, 5, 2, 13, 8, 10, 8, 0, 11, 14, 4, 6, 4, 9, 2, 0, 11, 5, 11, 1};


word8 *Sbox[256]={S_0_b16, S_1_b16};/*,
				      {6, 7, 7, 7, 15, 6, 6, 12, 3, 0, 6, 2, 15, 13, 10, 7, 12, 8, 12, 7, 15, 5, 4, 15, 10, 13, 10, 10, 9, 10, 7, 12, 11, 15, 9, 2, 3, 3, 15, 12, 3, 10, 14, 15, 7, 13, 3, 1, 0, 12, 2, 12, 1, 9, 0, 9, 0, 1, 8, 14, 14, 2, 11, 7, 0, 8, 2, 1, 1, 6, 5, 10, 5, 3, 13, 11, 2, 14, 2, 8, 5, 13, 0, 14, 2, 15, 11, 5, 6, 12, 11, 3, 4, 4, 5, 12, 13, 14, 10, 15, 4, 4, 3, 8, 4, 15, 0, 7, 5, 3, 9, 10, 5, 10, 4, 8, 9, 9, 3, 15, 11, 11, 13, 2, 1, 15, 15, 13, 12, 0, 1, 14, 5, 9, 4, 1, 12, 10, 7, 3, 6, 5, 1, 7, 6, 8, 4, 13, 2, 2, 9, 8, 4, 14, 11, 1, 13, 5, 0, 13, 14, 3, 3, 0, 4, 0, 2, 5, 12, 13, 10, 6, 9, 9, 14, 7, 14, 12, 3, 6, 8, 13, 4, 10, 6, 5, 15, 14, 6, 7, 10, 0, 11, 7, 2, 2, 1, 10, 11, 12, 14, 13, 7, 1, 4, 11, 8, 8, 7, 3, 11, 6, 4, 0, 15, 0, 6, 3, 5, 11, 8, 12, 1, 9, 14, 15, 9, 1, 6, 13, 8, 9, 9, 1, 8, 14, 12, 5, 2, 13, 8, 10, 8, 0, 11, 14, 4, 6, 4, 9, 2, 0, 11, 5, 11, 1}};*/


word8 AlogT2_0_b16[256] = { 0, 2, 4, 6, 8, 10, 12, 14, 0, 2, 4, 6, 8, 10, 12, 14, 0, 2, 4, 6, 8, 10, 12, 14, 0, 2, 4, 6, 8, 10, 12, 14, 0, 2, 4, 6, 8, 10, 12, 14, 0, 2, 4, 6, 8, 10, 12, 14, 0, 2, 4, 6, 8, 10, 12, 14, 0, 2, 4, 6, 8, 10, 12, 14, 0, 2, 4, 6, 8, 10, 12, 14, 0, 2, 4, 6, 8, 10, 12, 14, 0, 2, 4, 6, 8, 10, 12, 14, 0, 2, 4, 6, 8, 10, 12, 14, 0, 2, 4, 6, 8, 10, 12, 14, 0, 2, 4, 6, 8, 10, 12, 14, 0, 2, 4, 6, 8, 10, 12, 14, 0, 2, 4, 6, 8, 10, 12, 14, 11, 9, 15, 13, 3, 1, 7, 5, 11, 9, 15, 13, 3, 1, 7, 5, 11, 9, 15, 13, 3, 1, 7, 5, 11, 9, 15, 13, 3, 1, 7, 5, 11, 9, 15, 13, 3, 1, 7, 5, 11, 9, 15, 13, 3, 1, 7, 5, 11, 9, 15, 13, 3, 1, 7, 5, 11, 9, 15, 13, 3, 1, 7, 5, 11, 9, 15, 13, 3, 1, 7, 5, 11, 9, 15, 13, 3, 1, 7, 5, 11, 9, 15, 13, 3, 1, 7, 5, 11, 9, 15, 13, 3, 1, 7, 5, 11, 9, 15, 13, 3, 1, 7, 5, 11, 9, 15, 13, 3, 1, 7, 5, 11, 9, 15, 13, 3, 1, 7, 5, 11, 9, 15, 13, 3, 1, 7, 5};

word8 AlogT2_1_b16[256] = { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 9, 9, 9, 9, 9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8, 11, 11, 11, 11, 11, 11, 11, 11, 10, 10, 10, 10, 10, 10, 10, 10, 13, 13, 13, 13, 13, 13, 13, 13, 12, 12, 12, 12, 12, 12, 12, 12, 15, 15, 15, 15, 15, 15, 15, 15, 14, 14, 14, 14, 14, 14, 14, 14};

word8 *T2[256]={AlogT2_0_b16, AlogT2_1_b16};


word8 AlogT3_0_b16[256] = { 0, 3, 6, 5, 12, 15, 10, 9, 8, 11, 14, 13, 4, 7, 2, 1, 0, 3, 6, 5, 12, 15, 10, 9, 8, 11, 14, 13, 4, 7, 2, 1, 0, 3, 6, 5, 12, 15, 10, 9, 8, 11, 14, 13, 4, 7, 2, 1, 0, 3, 6, 5, 12, 15, 10, 9, 8, 11, 14, 13, 4, 7, 2, 1, 0, 3, 6, 5, 12, 15, 10, 9, 8, 11, 14, 13, 4, 7, 2, 1, 0, 3, 6, 5, 12, 15, 10, 9, 8, 11, 14, 13, 4, 7, 2, 1, 0, 3, 6, 5, 12, 15, 10, 9, 8, 11, 14, 13, 4, 7, 2, 1, 0, 3, 6, 5, 12, 15, 10, 9, 8, 11, 14, 13, 4, 7, 2, 1, 11, 8, 13, 14, 7, 4, 1, 2, 3, 0, 5, 6, 15, 12, 9, 10, 11, 8, 13, 14, 7, 4, 1, 2, 3, 0, 5, 6, 15, 12, 9, 10, 11, 8, 13, 14, 7, 4, 1, 2, 3, 0, 5, 6, 15, 12, 9, 10, 11, 8, 13, 14, 7, 4, 1, 2, 3, 0, 5, 6, 15, 12, 9, 10, 11, 8, 13, 14, 7, 4, 1, 2, 3, 0, 5, 6, 15, 12, 9, 10, 11, 8, 13, 14, 7, 4, 1, 2, 3, 0, 5, 6, 15, 12, 9, 10, 11, 8, 13, 14, 7, 4, 1, 2, 3, 0, 5, 6, 15, 12, 9, 10, 11, 8, 13, 14, 7, 4, 1, 2, 3, 0, 5, 6, 15, 12, 9, 10};

word8 AlogT3_1_b16[256] = { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 15, 15, 15, 15, 15, 15, 15, 15, 14, 14, 14, 14, 14, 14, 14, 14, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 9, 9, 9, 9, 9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 15, 15, 15, 15, 15, 15, 15, 15, 14, 14, 14, 14, 14, 14, 14, 14, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1};


word8* T3[256]={AlogT3_0_b16, AlogT3_1_b16};



word8 AlogT9_0_b16[256] = { 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 5, 14, 7, 11, 2, 9, 0, 15, 6, 13, 4, 3, 10, 1, 8, 7, 14, 5, 12, 11, 2, 9, 0, 15, 6, 13, 4, 3, 10, 1, 8, 7, 14, 5, 12, 6, 15, 4, 13, 2, 11, 0, 9, 14, 7, 12, 5, 10, 3, 8, 1, 6, 15, 4, 13, 2, 11, 0, 9, 14, 7, 12, 5, 10, 3, 8, 1, 13, 4, 15, 6, 9, 0, 11, 2, 5, 12, 7, 14, 1, 8, 3, 10, 13, 4, 15, 6, 9, 0, 11, 2, 5, 12, 7, 14, 1, 8, 3, 10, 12, 5, 14, 7, 8, 1, 10, 3, 4, 13, 6, 15, 0, 9, 2, 11, 12, 5, 14, 7, 8, 1, 10, 3, 4, 13, 6, 15, 0, 9, 2, 11, 7, 14, 5, 12, 3, 10, 1, 8, 15, 6, 13, 4, 11, 2, 9, 0, 7, 14, 5, 12, 3, 10, 1, 8, 15, 6, 13, 4, 11, 2, 9, 0, 10, 3, 8, 1, 14, 7, 12, 5, 2, 11, 0, 9, 6, 15, 4, 13, 10, 3, 8, 1, 14, 7, 12, 5, 2, 11, 0, 9, 6, 15, 4, 13, 1, 8, 3, 10, 5, 12, 7, 14, 9, 0, 11, 2, 13, 4, 15, 6, 1, 8, 3, 10, 5, 12, 7, 14, 9, 0, 11, 2, 13, 4, 15, 6};

word8 AlogT9_1_b16[256] = { 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 9, 9, 8, 8, 11, 11, 10, 10, 13, 13, 12, 12, 15, 15, 14, 14, 3, 3, 2, 2, 1, 1, 0, 0, 7, 7, 6, 6, 5, 5, 4, 4, 10, 10, 11, 11, 8, 8, 9, 9, 14, 14, 15, 15, 12, 12, 13, 13, 7, 7, 6, 6, 5, 5, 4, 4, 3, 3, 2, 2, 1, 1, 0, 0, 14, 14, 15, 15, 12, 12, 13, 13, 10, 10, 11, 11, 8, 8, 9, 9, 4, 4, 5, 5, 6, 6, 7, 7, 0, 0, 1, 1, 2, 2, 3, 3, 13, 13, 12, 12, 15, 15, 14, 14, 9, 9, 8, 8, 11, 11, 10, 10, 14, 14, 15, 15, 12, 12, 13, 13, 10, 10, 11, 11, 8, 8, 9, 9, 7, 7, 6, 6, 5, 5, 4, 4, 3, 3, 2, 2, 1, 1, 0, 0, 13, 13, 12, 12, 15, 15, 14, 14, 9, 9, 8, 8, 11, 11, 10, 10, 4, 4, 5, 5, 6, 6, 7, 7, 0, 0, 1, 1, 2, 2, 3, 3, 9, 9, 8, 8, 11, 11, 10, 10, 13, 13, 12, 12, 15, 15, 14, 14, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 10, 10, 11, 11, 8, 8, 9, 9, 14, 14, 15, 15, 12, 12, 13, 13, 3, 3, 2, 2, 1, 1, 0, 0, 7, 7, 6, 6, 5, 5, 4, 4};

word8* T9[256]={AlogT9_0_b16, AlogT9_1_b16};


word8 AlogTb_0_b16[256] = { 0, 11, 6, 13, 12, 7, 10, 1, 8, 3, 14, 5, 4, 15, 2, 9, 0, 11, 6, 13, 12, 7, 10, 1, 8, 3, 14, 5, 4, 15, 2, 9, 11, 0, 13, 6, 7, 12, 1, 10, 3, 8, 5, 14, 15, 4, 9, 2, 11, 0, 13, 6, 7, 12, 1, 10, 3, 8, 5, 14, 15, 4, 9, 2, 6, 13, 0, 11, 10, 1, 12, 7, 14, 5, 8, 3, 2, 9, 4, 15, 6, 13, 0, 11, 10, 1, 12, 7, 14, 5, 8, 3, 2, 9, 4, 15, 13, 6, 11, 0, 1, 10, 7, 12, 5, 14, 3, 8, 9, 2, 15, 4, 13, 6, 11, 0, 1, 10, 7, 12, 5, 14, 3, 8, 9, 2, 15, 4, 7, 12, 1, 10, 11, 0, 13, 6, 15, 4, 9, 2, 3, 8, 5, 14, 7, 12, 1, 10, 11, 0, 13, 6, 15, 4, 9, 2, 3, 8, 5, 14, 12, 7, 10, 1, 0, 11, 6, 13, 4, 15, 2, 9, 8, 3, 14, 5, 12, 7, 10, 1, 0, 11, 6, 13, 4, 15, 2, 9, 8, 3, 14, 5, 1, 10, 7, 12, 13, 6, 11, 0, 9, 2, 15, 4, 5, 14, 3, 8, 1, 10, 7, 12, 13, 6, 11, 0, 9, 2, 15, 4, 5, 14, 3, 8, 10, 1, 12, 7, 6, 13, 0, 11, 2, 9, 4, 15, 14, 5, 8, 3, 10, 1, 12, 7, 6, 13, 0, 11, 2, 9, 4, 15, 14, 5, 8, 3};

word8 AlogTb_1_b16[256] = { 0, 0, 1, 1, 2, 2, 3, 3, 5, 5, 4, 4, 7, 7, 6, 6, 11, 11, 10, 10, 9, 9, 8, 8, 14, 14, 15, 15, 12, 12, 13, 13, 7, 7, 6, 6, 5, 5, 4, 4, 2, 2, 3, 3, 0, 0, 1, 1, 12, 12, 13, 13, 14, 14, 15, 15, 9, 9, 8, 8, 11, 11, 10, 10, 15, 15, 14, 14, 13, 13, 12, 12, 10, 10, 11, 11, 8, 8, 9, 9, 4, 4, 5, 5, 6, 6, 7, 7, 1, 1, 0, 0, 3, 3, 2, 2, 8, 8, 9, 9, 10, 10, 11, 11, 13, 13, 12, 12, 15, 15, 14, 14, 3, 3, 2, 2, 1, 1, 0, 0, 6, 6, 7, 7, 4, 4, 5, 5, 15, 15, 14, 14, 13, 13, 12, 12, 10, 10, 11, 11, 8, 8, 9, 9, 4, 4, 5, 5, 6, 6, 7, 7, 1, 1, 0, 0, 3, 3, 2, 2, 8, 8, 9, 9, 10, 10, 11, 11, 13, 13, 12, 12, 15, 15, 14, 14, 3, 3, 2, 2, 1, 1, 0, 0, 6, 6, 7, 7, 4, 4, 5, 5, 0, 0, 1, 1, 2, 2, 3, 3, 5, 5, 4, 4, 7, 7, 6, 6, 11, 11, 10, 10, 9, 9, 8, 8, 14, 14, 15, 15, 12, 12, 13, 13, 7, 7, 6, 6, 5, 5, 4, 4, 2, 2, 3, 3, 0, 0, 1, 1, 12, 12, 13, 13, 14, 14, 15, 15, 9, 9, 8, 8, 11, 11, 10, 10};

word8* Tb[256]={AlogTb_0_b16, AlogTb_1_b16};



word8 AlogTd_0_b16[256] = { 0, 13, 10, 7, 4, 9, 14, 3, 8, 5, 2, 15, 12, 1, 6, 11, 0, 13, 10, 7, 4, 9, 14, 3, 8, 5, 2, 15, 12, 1, 6, 11, 11, 6, 1, 12, 15, 2, 5, 8, 3, 14, 9, 4, 7, 10, 13, 0, 11, 6, 1, 12, 15, 2, 5, 8, 3, 14, 9, 4, 7, 10, 13, 0, 13, 0, 7, 10, 9, 4, 3, 14, 5, 8, 15, 2, 1, 12, 11, 6, 13, 0, 7, 10, 9, 4, 3, 14, 5, 8, 15, 2, 1, 12, 11, 6, 6, 11, 12, 1, 2, 15, 8, 5, 14, 3, 4, 9, 10, 7, 0, 13, 6, 11, 12, 1, 2, 15, 8, 5, 14, 3, 4, 9, 10, 7, 0, 13, 10, 7, 0, 13, 14, 3, 4, 9, 2, 15, 8, 5, 6, 11, 12, 1, 10, 7, 0, 13, 14, 3, 4, 9, 2, 15, 8, 5, 6, 11, 12, 1, 1, 12, 11, 6, 5, 8, 15, 2, 9, 4, 3, 14, 13, 0, 7, 10, 1, 12, 11, 6, 5, 8, 15, 2, 9, 4, 3, 14, 13, 0, 7, 10, 7, 10, 13, 0, 3, 14, 9, 4, 15, 2, 5, 8, 11, 6, 1, 12, 7, 10, 13, 0, 3, 14, 9, 4, 15, 2, 5, 8, 11, 6, 1, 12, 12, 1, 6, 11, 8, 5, 2, 15, 4, 9, 14, 3, 0, 13, 10, 7, 12, 1, 6, 11, 8, 5, 2, 15, 4, 9, 14, 3, 0, 13, 10, 7};

word8 AlogTd_1_b16[256] = { 0, 0, 1, 1, 3, 3, 2, 2, 6, 6, 7, 7, 5, 5, 4, 4, 13, 13, 12, 12, 14, 14, 15, 15, 11, 11, 10, 10, 8, 8, 9, 9, 11, 11, 10, 10, 8, 8, 9, 9, 13, 13, 12, 12, 14, 14, 15, 15, 6, 6, 7, 7, 5, 5, 4, 4, 0, 0, 1, 1, 3, 3, 2, 2, 6, 6, 7, 7, 5, 5, 4, 4, 0, 0, 1, 1, 3, 3, 2, 2, 11, 11, 10, 10, 8, 8, 9, 9, 13, 13, 12, 12, 14, 14, 15, 15, 13, 13, 12, 12, 14, 14, 15, 15, 11, 11, 10, 10, 8, 8, 9, 9, 0, 0, 1, 1, 3, 3, 2, 2, 6, 6, 7, 7, 5, 5, 4, 4, 13, 13, 12, 12, 14, 14, 15, 15, 11, 11, 10, 10, 8, 8, 9, 9, 0, 0, 1, 1, 3, 3, 2, 2, 6, 6, 7, 7, 5, 5, 4, 4, 6, 6, 7, 7, 5, 5, 4, 4, 0, 0, 1, 1, 3, 3, 2, 2, 11, 11, 10, 10, 8, 8, 9, 9, 13, 13, 12, 12, 14, 14, 15, 15, 11, 11, 10, 10, 8, 8, 9, 9, 13, 13, 12, 12, 14, 14, 15, 15, 6, 6, 7, 7, 5, 5, 4, 4, 0, 0, 1, 1, 3, 3, 2, 2, 0, 0, 1, 1, 3, 3, 2, 2, 6, 6, 7, 7, 5, 5, 4, 4, 13, 13, 12, 12, 14, 14, 15, 15, 11, 11, 10, 10, 8, 8, 9, 9};


word8* Td[256]={AlogTd_0_b16, AlogTd_1_b16};



word8 AlogTe_0_b16[256] = { 0, 14, 12, 2, 8, 6, 4, 10, 0, 14, 12, 2, 8, 6, 4, 10, 0, 14, 12, 2, 8, 6, 4, 10, 0, 14, 12, 2, 8, 6, 4, 10, 11, 5, 7, 9, 3, 13, 15, 1, 11, 5, 7, 9, 3, 13, 15, 1, 11, 5, 7, 9, 3, 13, 15, 1, 11, 5, 7, 9, 3, 13, 15, 1, 13, 3, 1, 15, 5, 11, 9, 7, 13, 3, 1, 15, 5, 11, 9, 7, 13, 3, 1, 15, 5, 11, 9, 7, 13, 3, 1, 15, 5, 11, 9, 7, 6, 8, 10, 4, 14, 0, 2, 12, 6, 8, 10, 4, 14, 0, 2, 12, 6, 8, 10, 4, 14, 0, 2, 12, 6, 8, 10, 4, 14, 0, 2, 12, 1, 15, 13, 3, 9, 7, 5, 11, 1, 15, 13, 3, 9, 7, 5, 11, 1, 15, 13, 3, 9, 7, 5, 11, 1, 15, 13, 3, 9, 7, 5, 11, 10, 4, 6, 8, 2, 12, 14, 0, 10, 4, 6, 8, 2, 12, 14, 0, 10, 4, 6, 8, 2, 12, 14, 0, 10, 4, 6, 8, 2, 12, 14, 0, 12, 2, 0, 14, 4, 10, 8, 6, 12, 2, 0, 14, 4, 10, 8, 6, 12, 2, 0, 14, 4, 10, 8, 6, 12, 2, 0, 14, 4, 10, 8, 6, 7, 9, 11, 5, 15, 1, 3, 13, 7, 9, 11, 5, 15, 1, 3, 13, 7, 9, 11, 5, 15, 1, 3, 13, 7, 9, 11, 5, 15, 1, 3, 13};

word8 AlogTe_1_b16[256] = { 0, 0, 1, 1, 3, 3, 2, 2, 7, 7, 6, 6, 4, 4, 5, 5, 14, 14, 15, 15, 13, 13, 12, 12, 9, 9, 8, 8, 10, 10, 11, 11, 13, 13, 12, 12, 14, 14, 15, 15, 10, 10, 11, 11, 9, 9, 8, 8, 3, 3, 2, 2, 0, 0, 1, 1, 4, 4, 5, 5, 7, 7, 6, 6, 10, 10, 11, 11, 9, 9, 8, 8, 13, 13, 12, 12, 14, 14, 15, 15, 4, 4, 5, 5, 7, 7, 6, 6, 3, 3, 2, 2, 0, 0, 1, 1, 7, 7, 6, 6, 4, 4, 5, 5, 0, 0, 1, 1, 3, 3, 2, 2, 9, 9, 8, 8, 10, 10, 11, 11, 14, 14, 15, 15, 13, 13, 12, 12, 4, 4, 5, 5, 7, 7, 6, 6, 3, 3, 2, 2, 0, 0, 1, 1, 10, 10, 11, 11, 9, 9, 8, 8, 13, 13, 12, 12, 14, 14, 15, 15, 9, 9, 8, 8, 10, 10, 11, 11, 14, 14, 15, 15, 13, 13, 12, 12, 7, 7, 6, 6, 4, 4, 5, 5, 0, 0, 1, 1, 3, 3, 2, 2, 14, 14, 15, 15, 13, 13, 12, 12, 9, 9, 8, 8, 10, 10, 11, 11, 0, 0, 1, 1, 3, 3, 2, 2, 7, 7, 6, 6, 4, 4, 5, 5, 3, 3, 2, 2, 0, 0, 1, 1, 4, 4, 5, 5, 7, 7, 6, 6, 13, 13, 12, 12, 14, 14, 15, 15, 10, 10, 11, 11, 9, 9, 8, 8};


word8* Te[256]={AlogTe_0_b16, AlogTe_1_b16};


word8 XOR_b16[256] = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14, 2, 3, 0, 1, 6, 7, 4, 5, 10, 11, 8, 9, 14, 15, 12, 13, 3, 2, 1, 0, 7, 6, 5, 4, 11, 10, 9, 8, 15, 14, 13, 12, 4, 5, 6, 7, 0, 1, 2, 3, 12, 13, 14, 15, 8, 9, 10, 11, 5, 4, 7, 6, 1, 0, 3, 2, 13, 12, 15, 14, 9, 8, 11, 10, 6, 7, 4, 5, 2, 3, 0, 1, 14, 15, 12, 13, 10, 11, 8, 9, 7, 6, 5, 4, 3, 2, 1, 0, 15, 14, 13, 12, 11, 10, 9, 8, 8, 9, 10, 11, 12, 13, 14, 15, 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 11, 10, 13, 12, 15, 14, 1, 0, 3, 2, 5, 4, 7, 6, 10, 11, 8, 9, 14, 15, 12, 13, 2, 3, 0, 1, 6, 7, 4, 5, 11, 10, 9, 8, 15, 14, 13, 12, 3, 2, 1, 0, 7, 6, 5, 4, 12, 13, 14, 15, 8, 9, 10, 11, 4, 5, 6, 7, 0, 1, 2, 3, 13, 12, 15, 14, 9, 8, 11, 10, 5, 4, 7, 6, 1, 0, 3, 2, 14, 15, 12, 13, 10, 11, 8, 9, 6, 7, 4, 5, 2, 3, 0, 1, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0};

word8 XOR_0_b16[256] = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14, 2, 3, 0, 1, 6, 7, 4, 5, 10, 11, 8, 9, 14, 15, 12, 13, 3, 2, 1, 0, 7, 6, 5, 4, 11, 10, 9, 8, 15, 14, 13, 12, 4, 5, 6, 7, 0, 1, 2, 3, 12, 13, 14, 15, 8, 9, 10, 11, 5, 4, 7, 6, 1, 0, 3, 2, 13, 12, 15, 14, 9, 8, 11, 10, 6, 7, 4, 5, 2, 3, 0, 1, 14, 15, 12, 13, 10, 11, 8, 9, 7, 6, 5, 4, 3, 2, 1, 0, 15, 14, 13, 12, 11, 10, 9, 8, 8, 9, 10, 11, 12, 13, 14, 15, 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 11, 10, 13, 12, 15, 14, 1, 0, 3, 2, 5, 4, 7, 6, 10, 11, 8, 9, 14, 15, 12, 13, 2, 3, 0, 1, 6, 7, 4, 5, 11, 10, 9, 8, 15, 14, 13, 12, 3, 2, 1, 0, 7, 6, 5, 4, 12, 13, 14, 15, 8, 9, 10, 11, 4, 5, 6, 7, 0, 1, 2, 3, 13, 12, 15, 14, 9, 8, 11, 10, 5, 4, 7, 6, 1, 0, 3, 2, 14, 15, 12, 13, 10, 11, 8, 9, 6, 7, 4, 5, 2, 3, 0, 1, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0};


word8 *XOR[256]={XOR_b16, XOR_b16};



void mul2_fhe (vector <LweSample*> &result,
	       vector <LweSample*> &b,
	       TFheGateBootstrappingSecretKeySet* gk,
	       BaseBKeySwitchKey* ks_key) {
  vector<LweSample*> tmp;
  tmp.push_back(new_LweSample(gk->lwe_key->params));
  tmp.push_back(new_LweSample(gk->lwe_key->params)); 
  tmp.push_back(new_LweSample(gk->lwe_key->params));
  lweCopy(tmp[0], b[0], gk->lwe_key->params);
  lweCopy(tmp[1], b[1], gk->lwe_key->params);
  lweCopy(tmp[2], b[1], gk->lwe_key->params);
  deref_boot_opti(result, gk, tmp, ks_key, T2);

}

void mul3_fhe (vector <LweSample*> &result,
	       vector <LweSample*> &b,
	       TFheGateBootstrappingSecretKeySet* gk,
	       BaseBKeySwitchKey* ks_key) {
  vector<LweSample*> tmp;
  tmp.push_back(new_LweSample(gk->lwe_key->params));
  tmp.push_back(new_LweSample(gk->lwe_key->params));
  tmp.push_back(new_LweSample(gk->lwe_key->params));
  lweCopy(tmp[0], b[0], gk->lwe_key->params);
  lweCopy(tmp[1], b[1], gk->lwe_key->params);
  lweCopy(tmp[2], b[1], gk->lwe_key->params);
  deref_boot_opti(result, gk, tmp, ks_key, T3);
}

void mul9_fhe (vector <LweSample*> &result,
	       vector <LweSample*> &b,
	       TFheGateBootstrappingSecretKeySet* gk,
	       BaseBKeySwitchKey* ks_key) {
  vector<LweSample*> tmp;
  tmp.push_back(new_LweSample(gk->lwe_key->params));
  tmp.push_back(new_LweSample(gk->lwe_key->params));
  tmp.push_back(new_LweSample(gk->lwe_key->params));
  lweCopy(tmp[0], b[0], gk->lwe_key->params);
  lweCopy(tmp[1], b[1], gk->lwe_key->params);
  lweCopy(tmp[2], b[1], gk->lwe_key->params);
  deref_boot_opti(result, gk, tmp, ks_key, T9);
}

void mulb_fhe (vector <LweSample*> &result,
	       vector <LweSample*> &b,
	       TFheGateBootstrappingSecretKeySet* gk,
	       BaseBKeySwitchKey* ks_key) {
  vector<LweSample*> tmp;
  tmp.push_back(new_LweSample(gk->lwe_key->params));
  tmp.push_back(new_LweSample(gk->lwe_key->params));
  tmp.push_back(new_LweSample(gk->lwe_key->params));
  lweCopy(tmp[0], b[0], gk->lwe_key->params);
  lweCopy(tmp[1], b[1], gk->lwe_key->params);
  lweCopy(tmp[2], b[1], gk->lwe_key->params);
  deref_boot_opti(result, gk, tmp, ks_key, Tb);
}

void muld_fhe (vector <LweSample*> &result,
	       vector <LweSample*> &b,
	       TFheGateBootstrappingSecretKeySet* gk,
	       BaseBKeySwitchKey* ks_key) {
  vector<LweSample*> tmp;
  tmp.push_back(new_LweSample(gk->lwe_key->params));
  tmp.push_back(new_LweSample(gk->lwe_key->params));
  tmp.push_back(new_LweSample(gk->lwe_key->params));
  lweCopy(tmp[0], b[0], gk->lwe_key->params);
  lweCopy(tmp[1], b[1], gk->lwe_key->params);
  lweCopy(tmp[2], b[1], gk->lwe_key->params);
  deref_boot_opti(result, gk, tmp, ks_key, Td);
}

void mule_fhe (vector <LweSample*> &result,
	       vector <LweSample*> &b,
	       TFheGateBootstrappingSecretKeySet* gk,
	       BaseBKeySwitchKey* ks_key) {
  vector<LweSample*> tmp;
  tmp.push_back(new_LweSample(gk->lwe_key->params));
  tmp.push_back(new_LweSample(gk->lwe_key->params));
  tmp.push_back(new_LweSample(gk->lwe_key->params));
  lweCopy(tmp[0], b[0], gk->lwe_key->params);
  lweCopy(tmp[1], b[1], gk->lwe_key->params);
  lweCopy(tmp[2], b[1], gk->lwe_key->params);
  deref_boot_opti(result, gk, tmp, ks_key, Te);
}





void testv_b16(TorusPolynomial *testv, int32_t N, uint8_t idx, word8 tab[256]) {
  uint32_t steps = N/16;
  for(int k = 0 ; k < 16 ; ++k) {
    for(int j = 0; j < steps; ++j) {
	testv->coefsT[steps*k + j] = dtot32((double)tab[16*idx + k]/16);
    }
  }
}



void test_v0(TorusPolynomial *testv, int32_t N){
    for(int j = 0; j < N; ++j) 
      testv->coefsT[j] = dtot32(0.015625); // 1/64
}





void testv_vi_b16(IntPolynomial *testv, int32_t N, uint8_t idx, word8 tab[256]) {
  uint32_t steps = N/16;
  for(int k = 0 ; k < 16 ; ++k) {
    for(int j = 0; j < steps; ++j) {
      if(steps*k + j == 0)
	testv->coefs[0]= tab[16*idx]+tab[16*idx+15];
      else if((steps*k + j)%(steps)!=0)
	testv->coefs[steps*k + j]=0;
      else
	testv->coefs[steps*k + j] = (tab[16*idx + k]-tab[16*idx + k-1]);
    }
  } 
}


void testv_vi_b16_2(IntPolynomial *testv, int32_t N, word8 tab[16]) {
  uint32_t steps = N/16;
  for(int k = 0 ; k < 16 ; ++k) {
      for(int j = 0; j < steps; ++j) {
	if(steps*k + j == 0)
	  testv->coefs[0]= tab[0]+tab[15];
	else if((steps*k + j)%(steps)!=0)
	  testv->coefs[steps*k + j]=0;
	else
	  testv->coefs[steps*k + j] = (tab[k]-tab[k-1]);
      }
    }
}



void testv_vi_and(IntPolynomial *testv, int32_t N, uint8_t i) {
  uint32_t steps = N/16;
  if(i==0){
    for(int k = 0 ; k < 16 ; ++k) {
      for(int j = 0; j < steps; ++j) {
	if(steps*k + j == 0)
	  testv->coefs[0]= and_1[0]+and_1[15];
	else if((steps*k + j)%(steps)!=0)
	  testv->coefs[steps*k + j]=0;
	else
	  testv->coefs[steps*k + j] = (and_1[k]-and_1[k-1]);
      }
    } 
  }
  else if(i==1){
    for(int k = 0 ; k < 16 ; ++k) {
      for(int j = 0; j < steps; ++j) {
	if(steps*k + j == 0)
	  testv->coefs[0]= and_2[0]+and_2[15];
	else if((steps*k + j)%(steps)!=0)
	  testv->coefs[steps*k + j]=0;
	else
	  testv->coefs[steps*k + j] = (and_2[k]-and_2[k-1]);
      }
    } 
  }
  else if(i==2){
    for(int k = 0 ; k < 16 ; ++k) {
      for(int j = 0; j < steps; ++j) {
	if(steps*k + j == 0)
	  testv->coefs[0]= and_4[0]+and_4[15];
	else if((steps*k + j)%(steps)!=0)
	  testv->coefs[steps*k + j]=0;
	else
	  testv->coefs[steps*k + j] = (and_4[k]-and_4[k-1]);
      }
    } 
  }
  else{
    for(int k = 0 ; k < 16 ; ++k) {
      for(int j = 0; j < steps; ++j) {
	if(steps*k + j == 0)
	  testv->coefs[0]= and_8[0]+and_8[15];
	else if((steps*k + j)%(steps)!=0)
	  testv->coefs[steps*k + j]=0;
	else
	  testv->coefs[steps*k + j] = (and_8[k]-and_8[k-1]);
      }
    } 
  }
}




word8 and_8[16]={0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1};

word8 and_4[16]={0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1};

word8 and_2[16]={0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1};

word8 and_1[16]={0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1};


void testv_and(TorusPolynomial *testv, int32_t N, word8 tab[16]){
  uint32_t steps = N/16;
  for(int k = 0 ; k < 16 ; ++k) {
    for(int j = 0; j < steps; ++j) {
      testv->coefsT[steps*k + j] = dtot32((double)tab[k]/32);
    }   
  }
}



